# GitHub Actions workflow for testing gwArsenicR package
# This workflow tests the package on multiple R versions and operating systems
# to ensure compatibility and reliability across different environments

name: R Package Testing - gwArsenicR

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (R ${{ matrix.config.r }})
    
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: ubuntu-latest,  r: 'release'}
          - {os: ubuntu-latest,  r: 'devel'}
          - {os: ubuntu-latest,  r: 'oldrel-1'}
          - {os: windows-latest, r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Setup Pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Query R dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::rcmdcheck
            any::testthat
            any::devtools
            any::remotes
          needs: check

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev

      - name: Install package dependencies
        run: |
          # Install package dependencies
          remotes::install_deps(dependencies = TRUE, upgrade = "always")
          
          # Install additional testing dependencies
          install.packages(c("covr", "spelling"))
        shell: Rscript {0}

      - name: Check package build
        uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          error-on: '"error"'
          
      - name: Run comprehensive tests
        run: |
          # Load package and run all tests
          devtools::load_all()
          
          # Run main analysis tests (fast)
          cat("Running analysis-specific tests...\n")
          devtools::test(filter = "analysis")
          
          # Run all tests for comprehensive validation
          cat("Running full test suite...\n")
          devtools::test()
          
          # Verify package can be installed and loaded
          cat("Testing package installation...\n")
          devtools::install()
          library(gwArsenicR)
          
          # Test main function exists and has correct signature
          stopifnot(exists("perform_sensitivity_analysis"))
          cat("All tests completed successfully!\n")
        shell: Rscript {0}

      - name: Test vignette rendering
        run: |
          # Test that vignettes can be built
          if (file.exists("vignettes/gwArsenicR-vignette.Rmd")) {
            cat("Testing vignette rendering...\n")
            rmarkdown::render("vignettes/gwArsenicR-vignette.Rmd", 
                            output_dir = tempdir())
            cat("Vignette rendered successfully!\n")
          }
        shell: Rscript {0}

      - name: Show session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

  # Separate job for code coverage (only on Ubuntu with latest R)
  coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Setup R dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::covr
            any::testthat
            any::devtools

      - name: Test coverage
        run: |
          # Generate coverage report
          cov <- covr::package_coverage(
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(Sys.getenv("RUNNER_TEMP"), "package")
          )
          
          # Print coverage summary
          print(cov)
          
          # Upload to codecov if token available
          if (Sys.getenv("CODECOV_TOKEN") != "") {
            covr::codecov(coverage = cov)
          }
        shell: Rscript {0}

  # Quick validation job for documentation
  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup R
        uses: r-lib/actions/setup-r@v2

      - name: Setup R dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::roxygen2
            any::devtools
            any::pkgdown

      - name: Check documentation
        run: |
          # Check that documentation is up to date
          devtools::document()
          
          # Verify no uncommitted changes to documentation
          if (length(system("git status --porcelain", intern = TRUE)) > 0) {
            cat("Documentation is out of date. Please run devtools::document()\n")
            system("git status")
            quit(status = 1)
          }
          
          cat("Documentation is up to date!\n")
        shell: Rscript {0}
